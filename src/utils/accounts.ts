import { generateSecureRandom } from 'react-native-securerandom';
import * as bip39 from 'bip39';
import { ChainId, EOA, SmartWallet } from '@node-fi/sdk-core';

export type MnemonicLanguageOption =
  | 'chinese_simplified'
  | 'chinese_traditional'
  | 'czech'
  | 'english'
  | 'french'
  | 'italian'
  | 'japanese'
  | 'korean'
  | 'portuguese'
  | 'spanish';

export const SupportedMnemonicLanguages: MnemonicLanguageOption[] = [
  'chinese_simplified',
  'chinese_traditional',
  'czech',
  'english',
  'french',
  'italian',
  'japanese',
  'korean',
  'portuguese',
  'spanish',
];

export const SUPPORTED_BASE_CURRENCIES = [
  '1inch',
  'aave',
  'ada',
  'aed',
  'afn',
  'algo',
  'all',
  'amd',
  'amp',
  'ang',
  'aoa',
  'ar',
  'ars',
  'atom',
  'aud',
  'avax',
  'awg',
  'axs',
  'azn',
  'bam',
  'bat',
  'bbd',
  'bch',
  'bdt',
  'bgn',
  'bhd',
  'bif',
  'bmd',
  'bnb',
  'bnd',
  'bob',
  'brl',
  'bsd',
  'bsv',
  'btc',
  'btcb',
  'btg',
  'btn',
  'busd',
  'bwp',
  'byn',
  'byr',
  'bzd',
  'cad',
  'cake',
  'cdf',
  'celo',
  'chf',
  'chz',
  'clf',
  'clp',
  'cny',
  'comp',
  'cop',
  'crc',
  'cro',
  'crv',
  'cuc',
  'cup',
  'cve',
  'cvx',
  'czk',
  'dai',
  'dash',
  'dcr',
  'dfi',
  'djf',
  'dkk',
  'doge',
  'dop',
  'dot',
  'dzd',
  'egld',
  'egp',
  'enj',
  'eos',
  'ern',
  'etb',
  'etc',
  'eth',
  'eur',
  'fei',
  'fil',
  'fjd',
  'fkp',
  'flow',
  'frax',
  'ftm',
  'ftt',
  'gala',
  'gbp',
  'gel',
  'ggp',
  'ghs',
  'gip',
  'gmd',
  'gnf',
  'gno',
  'grt',
  'gt',
  'gtq',
  'gyd',
  'hbar',
  'hkd',
  'hnl',
  'hnt',
  'hot',
  'hrk',
  'ht',
  'htg',
  'huf',
  'icp',
  'idr',
  'ils',
  'imp',
  'inj',
  'inr',
  'iqd',
  'irr',
  'isk',
  'jep',
  'jmd',
  'jod',
  'jpy',
  'kava',
  'kcs',
  'kda',
  'kes',
  'kgs',
  'khr',
  'klay',
  'kmf',
  'knc',
  'kpw',
  'krw',
  'ksm',
  'kwd',
  'kyd',
  'kzt',
  'lak',
  'lbp',
  'leo',
  'link',
  'lkr',
  'lrc',
  'lrd',
  'lsl',
  'ltc',
  'ltl',
  'luna',
  'lvl',
  'lyd',
  'mad',
  'mana',
  'matic',
  'mdl',
  'mga',
  'mina',
  'miota',
  'mkd',
  'mkr',
  'mmk',
  'mnt',
  'mop',
  'mro',
  'mur',
  'mvr',
  'mwk',
  'mxn',
  'myr',
  'mzn',
  'nad',
  'near',
  'neo',
  'nexo',
  'ngn',
  'nio',
  'nok',
  'npr',
  'nzd',
  'okb',
  'omr',
  'one',
  'pab',
  'paxg',
  'pen',
  'pgk',
  'php',
  'pkr',
  'pln',
  'pyg',
  'qar',
  'qnt',
  'qtum',
  'ron',
  'rsd',
  'rub',
  'rune',
  'rwf',
  'sand',
  'sar',
  'sbd',
  'scr',
  'sdg',
  'sek',
  'sgd',
  'shib',
  'shp',
  'sll',
  'sol',
  'sos',
  'srd',
  'std',
  'stx',
  'svc',
  'syp',
  'szl',
  'thb',
  'theta',
  'tjs',
  'tmt',
  'tnd',
  'top',
  'trx',
  'try',
  'ttd',
  'ttt',
  'tusd',
  'twd',
  'tzs',
  'uah',
  'ugx',
  'uni',
  'usd',
  'usdc',
  'usdp',
  'usdt',
  'uyu',
  'uzs',
  'vef',
  'vet',
  'vnd',
  'vuv',
  'waves',
  'wbtc',
  'wemix',
  'wst',
  'xaf',
  'xag',
  'xau',
  'xcd',
  'xdc',
  'xdr',
  'xec',
  'xem',
  'xlm',
  'xmr',
  'xof',
  'xpf',
  'xrp',
  'xtz',
  'yer',
  'zar',
  'zec',
  'zil',
  'zmk',
  'zmw',
  'zwl',
] as const;

export const generateMnemonic = async (
  language: MnemonicLanguageOption = 'english'
) => {
  const bytes = await generateSecureRandom(32);
  let temp = '';
  for (let i = 0; i < bytes.length; i++) {
    const num = bytes[i].toString(16);
    temp += num.length < 2 ? `0${num}` : num;
  }

  const mnemonic = bip39.entropyToMnemonic(temp, bip39.wordlists[language]);
  return mnemonic;
};

export const createWallet = async (
  apiKey: string,
  chain: ChainId,
  bip39Language: MnemonicLanguageOption = 'english',
  smartWallet?: boolean,
  existingMnemonic?: string
) => {
  const mnemonic = existingMnemonic ?? (await generateMnemonic(bip39Language));
  const wallet = smartWallet
    ? new SmartWallet(apiKey, chain)
    : new EOA(apiKey, chain);
  await wallet._loadWallet({ mnemonic });
  await wallet.register();

  return { wallet, mnemonic };
};
